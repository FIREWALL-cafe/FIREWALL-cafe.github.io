// Simplified Vercel Function for testing\n// Just implements Google search without translation/database saves\n\nexport default async function handler(req, res) {\n  if (req.method !== 'POST') {\n    res.setHeader('Allow', ['POST']);\n    return res.status(405).json({ error: `Method ${req.method} Not Allowed` });\n  }\n\n  try {\n    const { query, search_client_name } = req.body;\n\n    if (!query || query.trim() === '') {\n      throw new Error('Search query is required');\n    }\n\n    console.log('Processing simple search for:', query);\n\n    // Mock Google results for now\n    const googleResults = [\n      { imageUrl: 'https://example.com/1.jpg', title: 'Test 1', link: 'https://example.com', source: 'example.com' },\n      { imageUrl: 'https://example.com/2.jpg', title: 'Test 2', link: 'https://example.com', source: 'example.com' },\n      { imageUrl: 'https://example.com/3.jpg', title: 'Test 3', link: 'https://example.com', source: 'example.com' }\n    ];\n\n    // Mock Baidu results\n    const baiduResults = [\n      { imageUrl: 'https://baidu.com/1.jpg', title: '测试 1', link: 'https://baidu.com', source: 'baidu.com' },\n      { imageUrl: 'https://baidu.com/2.jpg', title: '测试 2', link: 'https://baidu.com', source: 'baidu.com' },\n      { imageUrl: 'https://baidu.com/3.jpg', title: '测试 3', link: 'https://baidu.com', source: 'baidu.com' }\n    ];\n\n    const response = {\n      searchId: Date.now(), // Mock search ID\n      googleResults,\n      baiduResults,\n      translation: '测试' // Mock translation\n    };\n\n    console.log('Simple search completed');\n    res.status(200).json(response);\n\n  } catch (error) {\n    console.error('Simple search error:', error);\n    res.status(400).json({\n      error: error.message || 'Failed to process search request',\n      details: error.toString()\n    });\n  }\n}\n\nexport const config = {\n  api: {\n    bodyParser: {\n      sizeLimit: '10mb',\n    },\n  },\n};